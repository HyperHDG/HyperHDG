/* ------------------------------------------------------------------------------------------------------
 *
 * This file is part of EP2 of the STRUCTURES initiative of the University of Heidelberg.
 * It solves a PDE that is solely defined on a graph using the HDG method.
 * 
 * Definition of a class for point objects providing getter functions only.
 *
 * ------------------------------------------------------------------------------------------------------
 *
 * Author: Andreas Rupp, University of Heidelberg, 2019
 */


template void plot
<
  HDGHyperGraph < compute_n_dofs_per_node(1, 1), Topology::HyperGraph_Cubic< 1, 1 >, Geometry::HyperGraph_Cubic_UnitCube< 1, 1 > >,
  DiffusionSolverNaive_RegularQuad<1, 1, 2 * 1>
>
(std::vector<double>, PlotOptions
<
  HDGHyperGraph < compute_n_dofs_per_node(1, 1), Topology::HyperGraph_Cubic< 1, 1 >, Geometry::HyperGraph_Cubic_UnitCube< 1, 1 > >,
  DiffusionSolverNaive_RegularQuad<1, 1, 2 * 1>
>&);
template void plot
<
  HDGHyperGraph < compute_n_dofs_per_node(1, 1), Topology::HyperGraph_Cubic< 1, 2 >, Geometry::HyperGraph_Cubic_UnitCube< 1, 2 > >,
  DiffusionSolverNaive_RegularQuad<1, 1, 2 * 1>
>
(std::vector<double>, PlotOptions
<
  HDGHyperGraph < compute_n_dofs_per_node(1, 1), Topology::HyperGraph_Cubic< 1, 2 >, Geometry::HyperGraph_Cubic_UnitCube< 1, 2 > >,
  DiffusionSolverNaive_RegularQuad<1, 1, 2 * 1>
>&);
template void plot
<
  HDGHyperGraph < compute_n_dofs_per_node(1, 1), Topology::HyperGraph_Cubic< 1, 3 >, Geometry::HyperGraph_Cubic_UnitCube< 1, 3 > >,
  DiffusionSolverNaive_RegularQuad<1, 1, 2 * 1>
>
(std::vector<double>, PlotOptions
<
  HDGHyperGraph < compute_n_dofs_per_node(1, 1), Topology::HyperGraph_Cubic< 1, 3 >, Geometry::HyperGraph_Cubic_UnitCube< 1, 3 > >,
  DiffusionSolverNaive_RegularQuad<1, 1, 2 * 1>
>&);
template void plot
<
  HDGHyperGraph < compute_n_dofs_per_node(2, 1), Topology::HyperGraph_Cubic< 2, 2 >, Geometry::HyperGraph_Cubic_UnitCube< 2, 2 > >,
  DiffusionSolverNaive_RegularQuad<2, 1, 2 * 1>
>
(std::vector<double>, PlotOptions
<
  HDGHyperGraph < compute_n_dofs_per_node(2, 1), Topology::HyperGraph_Cubic< 2, 2 >, Geometry::HyperGraph_Cubic_UnitCube< 2, 2 > >,
  DiffusionSolverNaive_RegularQuad<2, 1, 2 * 1>
>&);
template void plot
<
  HDGHyperGraph < compute_n_dofs_per_node(2, 1), Topology::HyperGraph_Cubic< 2, 3 >, Geometry::HyperGraph_Cubic_UnitCube< 2, 3 > >,
  DiffusionSolverNaive_RegularQuad<2, 1, 2 * 1>
>
(std::vector<double>, PlotOptions
<
  HDGHyperGraph < compute_n_dofs_per_node(2, 1), Topology::HyperGraph_Cubic< 2, 3 >, Geometry::HyperGraph_Cubic_UnitCube< 2, 3 > >,
  DiffusionSolverNaive_RegularQuad<2, 1, 2 * 1>
>&);
template void plot
<
  HDGHyperGraph < compute_n_dofs_per_node(3, 1), Topology::HyperGraph_Cubic< 3, 3 >, Geometry::HyperGraph_Cubic_UnitCube< 3, 3 > >,
  DiffusionSolverNaive_RegularQuad<3, 1, 2 * 1>
>
(std::vector<double>, PlotOptions
<
  HDGHyperGraph < compute_n_dofs_per_node(3, 1), Topology::HyperGraph_Cubic< 3, 3 >, Geometry::HyperGraph_Cubic_UnitCube< 3, 3 > >,
  DiffusionSolverNaive_RegularQuad<3, 1, 2 * 1>
>&);

template class PlotOptions
<
  HDGHyperGraph < compute_n_dofs_per_node(1, 1), Topology::HyperGraph_Cubic< 1, 1 >, Geometry::HyperGraph_Cubic_UnitCube< 1, 1 > >,
  DiffusionSolverNaive_RegularQuad<1, 1, 2 * 1>
>;
template class PlotOptions
<
  HDGHyperGraph < compute_n_dofs_per_node(1, 1), Topology::HyperGraph_Cubic< 1, 2 >, Geometry::HyperGraph_Cubic_UnitCube< 1, 2 > >,
  DiffusionSolverNaive_RegularQuad<1, 1, 2 * 1>
>;
template class PlotOptions
<
  HDGHyperGraph < compute_n_dofs_per_node(1, 1), Topology::HyperGraph_Cubic< 1, 3 >, Geometry::HyperGraph_Cubic_UnitCube< 1, 3 > >,
  DiffusionSolverNaive_RegularQuad<1, 1, 2 * 1>
>;
template class PlotOptions
<
  HDGHyperGraph < compute_n_dofs_per_node(2, 1), Topology::HyperGraph_Cubic< 2, 2 >, Geometry::HyperGraph_Cubic_UnitCube< 2, 2 > >,
  DiffusionSolverNaive_RegularQuad<2, 1, 2 * 1>
>;
template class PlotOptions
<
  HDGHyperGraph < compute_n_dofs_per_node(2, 1), Topology::HyperGraph_Cubic< 2, 3 >, Geometry::HyperGraph_Cubic_UnitCube< 2, 3 > >,
  DiffusionSolverNaive_RegularQuad<2, 1, 2 * 1>
>;
template class PlotOptions
<
  HDGHyperGraph < compute_n_dofs_per_node(3, 1), Topology::HyperGraph_Cubic< 3, 3 >, Geometry::HyperGraph_Cubic_UnitCube< 3, 3 > >,
  DiffusionSolverNaive_RegularQuad<3, 1, 2 * 1>
>;


template void plot
<
  HDGHyperGraph < compute_n_dofs_per_node(1, 1), Topology::HyperGraph_Cubic< 1, 1 >, Geometry::HyperGraph_Cubic_UnitCube< 1, 1 > >,
  ElasticitySolver_RegularQuad<1,1, 1, 2 * 1>
>
(std::vector<double>, PlotOptions
<
  HDGHyperGraph < compute_n_dofs_per_node(1, 1), Topology::HyperGraph_Cubic< 1, 1 >, Geometry::HyperGraph_Cubic_UnitCube< 1, 1 > >,
  ElasticitySolver_RegularQuad<1,1, 1, 2 * 1>
>&);
template void plot
<
  HDGHyperGraph < compute_n_dofs_per_node(1, 1), Topology::HyperGraph_Cubic< 1, 2 >, Geometry::HyperGraph_Cubic_UnitCube< 1, 2 > >,
  ElasticitySolver_RegularQuad<1,2, 1, 2 * 1>
>
(std::vector<double>, PlotOptions
<
  HDGHyperGraph < compute_n_dofs_per_node(1, 1), Topology::HyperGraph_Cubic< 1, 2 >, Geometry::HyperGraph_Cubic_UnitCube< 1, 2 > >,
  ElasticitySolver_RegularQuad<1,2, 1, 2 * 1>
>&);
template void plot
<
  HDGHyperGraph < compute_n_dofs_per_node(1, 1), Topology::HyperGraph_Cubic< 1, 3 >, Geometry::HyperGraph_Cubic_UnitCube< 1, 3 > >,
  ElasticitySolver_RegularQuad<1,3, 1, 2 * 1>
>
(std::vector<double>, PlotOptions
<
  HDGHyperGraph < compute_n_dofs_per_node(1, 1), Topology::HyperGraph_Cubic< 1, 3 >, Geometry::HyperGraph_Cubic_UnitCube< 1, 3 > >,
  ElasticitySolver_RegularQuad<1,3, 1, 2 * 1>
>&);
/* template void plot
<
  HDGHyperGraph < compute_n_dofs_per_node(2, 1), Topology::HyperGraph_Cubic< 2, 2 >, Geometry::HyperGraph_Cubic_UnitCube< 2, 2 > >,
  ElasticitySolver_RegularQuad<2,2, 1, 2 * 1>
>
(std::vector<double>, PlotOptions
<
  HDGHyperGraph < compute_n_dofs_per_node(2, 1), Topology::HyperGraph_Cubic< 2, 2 >, Geometry::HyperGraph_Cubic_UnitCube< 2, 2 > >,
  ElasticitySolver_RegularQuad<2,2, 1, 2 * 1>
>&);
template void plot
<
  HDGHyperGraph < compute_n_dofs_per_node(2, 1), Topology::HyperGraph_Cubic< 2, 3 >, Geometry::HyperGraph_Cubic_UnitCube< 2, 3 > >,
  ElasticitySolver_RegularQuad<2,3, 1, 2 * 1>
>
(std::vector<double>, PlotOptions
<
  HDGHyperGraph < compute_n_dofs_per_node(2, 1), Topology::HyperGraph_Cubic< 2, 3 >, Geometry::HyperGraph_Cubic_UnitCube< 2, 3 > >,
  ElasticitySolver_RegularQuad<2,3, 1, 2 * 1>
>&);
template void plot
<
  HDGHyperGraph < compute_n_dofs_per_node(3, 1), Topology::HyperGraph_Cubic< 3, 3 >, Geometry::HyperGraph_Cubic_UnitCube< 3, 3 > >,
  ElasticitySolver_RegularQuad<3,3, 1, 2 * 1>
>
(std::vector<double>, PlotOptions
<
  HDGHyperGraph < compute_n_dofs_per_node(3, 1), Topology::HyperGraph_Cubic< 3, 3 >, Geometry::HyperGraph_Cubic_UnitCube< 3, 3 > >,
  ElasticitySolver_RegularQuad<3,3, 1, 2 * 1>
>&);*/

template class PlotOptions
<
  HDGHyperGraph < compute_n_dofs_per_node(1, 1), Topology::HyperGraph_Cubic< 1, 1 >, Geometry::HyperGraph_Cubic_UnitCube< 1, 1 > >,
  ElasticitySolver_RegularQuad<1,1, 1, 2 * 1>
>;
template class PlotOptions
<
  HDGHyperGraph < compute_n_dofs_per_node(1, 1), Topology::HyperGraph_Cubic< 1, 2 >, Geometry::HyperGraph_Cubic_UnitCube< 1, 2 > >,
  ElasticitySolver_RegularQuad<1,2, 1, 2 * 1>
>;
template class PlotOptions
<
  HDGHyperGraph < compute_n_dofs_per_node(1, 1), Topology::HyperGraph_Cubic< 1, 3 >, Geometry::HyperGraph_Cubic_UnitCube< 1, 3 > >,
  ElasticitySolver_RegularQuad<1,3, 1, 2 * 1>
>;/*
template class PlotOptions
<
  HDGHyperGraph < compute_n_dofs_per_node(2, 1), Topology::HyperGraph_Cubic< 2, 2 >, Geometry::HyperGraph_Cubic_UnitCube< 2, 2 > >,
  ElasticitySolver_RegularQuad<2,2, 1, 2 * 1>
>;
template class PlotOptions
<
  HDGHyperGraph < compute_n_dofs_per_node(2, 1), Topology::HyperGraph_Cubic< 2, 3 >, Geometry::HyperGraph_Cubic_UnitCube< 2, 3 > >,
  ElasticitySolver_RegularQuad<2,3, 1, 2 * 1>
>;
template class PlotOptions
<
  HDGHyperGraph < compute_n_dofs_per_node(3, 1), Topology::HyperGraph_Cubic< 3, 3 >, Geometry::HyperGraph_Cubic_UnitCube< 3, 3 > >,
  ElasticitySolver_RegularQuad<3,3, 1, 2 * 1>
>;*/
